{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/pixabay-api.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","state","query","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","this","type","style","marginRight","onChange","placeholder","Component","ImageGalleryItem","src","largeImageURL","onOpenModal","data-source","alt","width","onClick","Status","ImageGallery","error","status","images","map","id","webformatURL","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","api","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","App","isLoading","showModal","handleFormSubmit","getImages","toggleLoader","imagesAPI","hits","catch","finally","scrollTo","handleChangePage","top","documentElement","scrollHeight","behavior","toggleModal","dataset","source","prevProps","prevState","prevQuery","nextQuery","prevPage","nextPage","color","height","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ede269f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Bn8B\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\n\nexport default class Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryChange = event => {\n    this.setState({ query: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // if (this.state.pokemonName.trim() === '') {\n    //   toast.error('Введите имя покемона.');\n    //   return;\n    // }\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header>\n        <form onSubmit={this.handleSubmit}>\n          <button type=\"submit\">\n            <span>\n              <ImSearch style={{ marginRight: 8 }} />\n              Search\n            </span>\n          </button>\n\n          <input\n            type=\"text\"\n            //   autocomplete=\"off\"\n            //   autofocus\n            value={this.state.query}\n            onChange={this.handleQueryChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","export default function ImageGalleryItem({ src, largeImageURL, onOpenModal }) {\n  return (\n    <li>\n      <img\n        src={src}\n        data-source={largeImageURL}\n        alt=\"\"\n        width=\"200\"\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n","import { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGallery extends Component {\n  state = {\n    error: null,\n    status: Status.IDLE,\n  };\n\n  //   componentDidUpdate(prevProps, prevState) {\n  //     const prevQuery = prevProps.query;\n  //     const nextQuery = this.props.query;\n\n  //     if (prevQuery !== nextQuery) {\n  //       this.setState({ status: Status.PENDING });\n\n  //       API.fetchImages(nextQuery, this.props.page)\n  //         .then(({ hits }) => {\n  //           console.log('imggal', hits);\n  //           this.setState({ images: hits, status: Status.RESOLVED });\n  //         })\n  //         .catch(error => this.setState({ error, status: Status.REJECTED }));\n  //     }\n  //   }\n\n  render() {\n    return (\n      <ul>\n        {this.props.images.map(({ id, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            src={webformatURL}\n            largeImageURL={largeImageURL}\n            onOpenModal={this.props.onOpenModal}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\n// export default function ImageGallery({ images }) {\n//   return (\n//     <ul>\n//       {images.map(({ id, webformatURL, largeImageURL }) => (\n//         <ImageGalleryItem id={id} src={webformatURL} />\n//       ))}\n//     </ul>\n//   );\n// }\n","export default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    console.log('Modal componentDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    console.log('Modal componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      console.log('Нажали ESC, нужно закрыть модалку');\n\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    // console.log('Кликнули в бекдроп');\n\n    // console.log('currentTarget: ', event.currentTarget);\n    // console.log('target: ', event.target);\n\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={this.props.largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\nfunction fetchImages(query, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=18468929-778868d20e0ea2a779d7d4913&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Нет покемона с именем ${query}`));\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal/Modal';\nimport imagesAPI from './services/pixabay-api';\n\n// const Status = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\n\nclass App extends Component {\n  state = {\n    query: '',\n    images: [],\n\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    largeImageURL: '',\n    // error: null,\n    // status: Status.IDLE,\n  };\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n    // this.getImages(query, this.state.page);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    // if (!this.state.isLoading) {\n    //   this.setState(({ isLoading }) => ({\n    //     isLoading: !isLoading,\n    //   }));\n    // }\n\n    // if (prevQuery !== nextQuery || ) {\n    //   API.fetchImages(nextQuery, this.state.page)\n    //     .then(({ hits }) => {\n    //       console.log('imggal', hits);\n    //       this.setState({ images: hits, isLoading: false });\n    //     })\n    //     .catch(error => this.setState({ error }));\n    // }\n\n    if (prevQuery !== nextQuery || prevPage !== nextPage) {\n      // this.toggleLoader();\n      this.getImages(nextQuery, nextPage);\n    }\n    // this.setState({ isLoading: false });\n    // if (!this.state.isLoading) {\n    //   this.setState(({ isLoading }) => ({\n    //     isLoading: !isLoading,\n    //   }));\n    // }\n  }\n\n  getImages = (query, page) => {\n    this.toggleLoader();\n\n    return imagesAPI\n      .fetchImages(query, page)\n      .then(({ hits }) => {\n        console.log('imggal', hits);\n        this.setState(({ images, isLoading }) => ({\n          images: [...images, ...hits],\n          // isLoading: true,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.toggleLoader();\n        this.scrollTo();\n      });\n\n    //   this.setState(({ isLoading }) => ({\n    //     isLoading: false,\n    //   })),\n    // );\n  };\n\n  handleChangePage = () => {\n    this.setState(({ page }) => ({ page: page + 1 }));\n  };\n\n  toggleLoader = () => {\n    this.setState(({ isLoading }) => ({\n      isLoading: !isLoading,\n    }));\n  };\n  onLoadMore = () => {\n    // this.setState(({ page }) => ({ page: this.state.page + 1 }));\n    // this.getImages();\n    this.handleChangePage();\n    this.scrollTo();\n    // this.toggleLoader();\n  };\n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n  render() {\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          query={this.state.query}\n          page={this.state.page}\n          images={this.state.images}\n          onOpenModal={this.onOpenModal}\n        />\n        {this.state.isLoading && (\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {this.state.images.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n        {this.state.showModal && (\n          <Modal\n            largeImageURL={this.state.largeImageURL}\n            onClose={this.toggleModal}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2vrhw\",\"Modal\":\"Modal_Modal__452lx\"};"],"sourceRoot":""}